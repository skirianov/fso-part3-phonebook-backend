{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/phonebook.js","components/Notification.js","components/App.js","index.js"],"names":["Filter","filterList","onChange","PersonForm","handleNewPerson","newName","handleNewName","newPhone","handlePhone","onSubmit","required","value","type","Persons","person","deleteEntry","name","number","onClick","id","baseURL","phoneService","get","axios","then","response","data","create","newPerson","post","deletePerson","delete","update","put","messageStyle","backgroundColor","border","borderRadius","errorMessageStyle","color","Notification","message","status","style","App","useState","persons","setPersons","setNewName","setNewPhone","filtered","setFiltered","setMessage","setStatus","useEffect","phonebook","event","filter","toLowerCase","includes","target","preventDefault","find","console","log","window","confirm","updatedPhone","map","catch","error","setTimeout","length","created","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d9a424d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ filterList }) => (\r\n  <div>\r\n    filter shown with: <input onChange={filterList}/>\r\n  </div>\r\n);\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nconst PersonForm = ({ handleNewPerson, newName, handleNewName, newPhone, handlePhone }) => (\r\n    <form  onSubmit={handleNewPerson}>\r\n        <div>\r\n          name: <input required value={newName} onChange={handleNewName}/>\r\n          phone: <input required value={newPhone} onChange={handlePhone} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n)\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Persons = ({ person, deleteEntry }) => (\r\n    <div key={person.id}>\r\n      <p>{person.name}: {person.number}</p>\r\n      <button value=\"delete\" onClick={deleteEntry}>delete</button>\r\n    </div>\r\n);\r\n\r\nexport default Persons;","import axios from 'axios';\r\nconst baseURL = 'api/persons';\r\n\r\nconst get = () => {\r\n   const request =  axios.get(baseURL);\r\n   return request.then( response => response.data );\r\n}\r\n\r\nconst create = (newPerson) => {\r\n    const request = axios.post(baseURL, newPerson);\r\n    return request.then( response => response.data );\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseURL}/${id}`);\r\n    return request.then( response => response.data );\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    const request = axios.put(`${baseURL}/${id}`, newPerson);\r\n    return request.then( response => response.data );\r\n}\r\n\r\nconst phoneService = { get, create, deletePerson, update };\r\n\r\nexport default phoneService;","import React from 'react';\r\n\r\nconst messageStyle = {\r\n    backgroundColor: 'lightgrey',\r\n    border: '3px solid green',\r\n    borderRadius: '5px'\r\n}\r\n\r\nconst errorMessageStyle = {\r\n    backgroundColor: 'lightgrey',\r\n    border: '3px solid red',\r\n    borderRadius: '5px',\r\n    color: 'red'\r\n}\r\n\r\nconst Notification = ({message, status}) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n\r\n    if (status === 200){\r\n        return (\r\n            <div style={messageStyle}>\r\n                <p>{message}</p>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div style={errorMessageStyle}>\r\n                <p>{message}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react';\r\nimport Filter from './Filter';\r\nimport PersonForm from './PersonForm';\r\nimport Persons from './Persons';\r\nimport phoneService from '../services/phonebook';\r\nimport Notification from './Notification';\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([ ]);\r\n  const [ newName, setNewName ] = useState('');\r\n  const [ newPhone, setNewPhone ] = useState('');\r\n  const [ filtered, setFiltered ] = useState(persons);\r\n  const [ message, setMessage ] = useState(null);\r\n  const [ status, setStatus ] = useState(200);\r\n\r\n  useEffect(() => {\r\n    phoneService \r\n      .get()\r\n      .then( phonebook => {\r\n        setPersons(phonebook);\r\n        setFiltered(phonebook);\r\n      })\r\n  }, [])\r\n\r\n  const handleNewPerson = (event) => {\r\n    event.preventDefault();\r\n    if (persons.find(person => person.name === newName)){\r\n      const person = persons.find(person => person.name === newName);\r\n      console.log(person);\r\n        if (window.confirm(`The ${person.name} alredy exists in the phonebook. Do you want to update number?`)) {\r\n          const newPerson = {\r\n            name: person.name,\r\n            number: newPhone,\r\n            id: person.id,\r\n            }\r\n          phoneService\r\n            .update(person.id, newPerson)\r\n            .then( updatedPhone => {\r\n              setPersons(persons.map( person => person.id !== updatedPhone.id ? person : updatedPhone ));\r\n              setFiltered(persons.map( person => person.id !== updatedPhone.id ? person : updatedPhone ));\r\n            })\r\n            .catch (error => {\r\n              setMessage(`Information of ${newPerson.name} has already been removed from the server. Refreshing phonebook...`);\r\n              setStatus(404);\r\n                phoneService \r\n                .get()\r\n                .then( phonebook => {\r\n                  setPersons(phonebook);\r\n                  setFiltered(phonebook);\r\n                })\r\n              setTimeout(() => {\r\n                setMessage(null);\r\n              }, 3000);\r\n            });\r\n\r\n          setNewName('');\r\n          setNewPhone('');\r\n        }\r\n    } else {\r\n      const newPerson = {\r\n        name: newName,\r\n        number: newPhone,\r\n        id: persons[persons.length -1].id + 1,\r\n        }\r\n        phoneService.create(newPerson)\r\n          .then( created => {\r\n            setPersons(persons.concat(created));\r\n            setFiltered(filtered.concat(created));\r\n            setNewName('');\r\n            setNewPhone('');\r\n          })\r\n      setMessage(`Added ${newPerson.name}`);\r\n      setStatus(200);\r\n      setTimeout(() => {\r\n        setMessage(null);\r\n      }, 3000);\r\n    }\r\n  }\r\n  const handleNewName = (event) => {\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  const handlePhone = (event) => {\r\n    setNewPhone(event.target.value);\r\n  }\r\n  \r\n  const filterList = (event) => {\r\n    const filter = persons.filter(person => person.name.toLowerCase().includes(event.target.value.toLowerCase()));\r\n    setFiltered(filter);\r\n  }\r\n\r\n  const deleteEntry = (id) => {\r\n    const person = persons.filter( person => person.id === id )[0];\r\n    if (window.confirm(`Are you sure you want to delete ${person.name}`)) {\r\n      phoneService.deletePerson(id);\r\n      setPersons(persons.filter( person => person.id !== id));\r\n      setFiltered(persons.filter( person => person.id !== id));\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} status={status}/>\r\n      <Filter filterList={filterList} />\r\n      <h2>add new</h2>\r\n      <PersonForm handleNewName={handleNewName} handlePhone={handlePhone} newName={newName} newPhone={newPhone} handleNewPerson={handleNewPerson} />\r\n      <h2>Numbers</h2>\r\n      <div>\r\n        {filtered.map(person => \r\n          <Persons person={person} key={person.id} deleteEntry={() => deleteEntry(person.id)} />\r\n          )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}